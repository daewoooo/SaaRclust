% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EMclust.R
\name{EMclust}
\alias{EMclust}
\title{EM (Expectation maximization) function}
\usage{
EMclust(counts.l, theta.param = NULL, pi.param = NULL,
  num.iter = 100, alpha = 0.1, logL.th = 1, log.scale = FALSE)
}
\arguments{
\item{counts.l}{A \code{list} of plus and minus alignments per genomic region.}

\item{theta.param}{A \code{list} of estimated cell types for each single cell. (rows=clusters, cols=strand states)}

\item{pi.param}{A \code{vector} of estimated sizes of each cluster based on initial hard clustering.}

\item{num.iter}{Set number of iteration to EM algorithm.}

\item{alpha}{Estimated level of background in Strand-seq reads.}

\item{logL.th}{Set the difference between objective function from the current and the previous interation for EM algorithm to converge.}

\item{log.scale}{Set to \code{TRUE} if probabilty should be calculated in a log scale. Recommended for high reads count 
numbers expected for larger genomic regions such as contigs.}
}
\value{
A \code{list} of various exported results [pVal, pVal.logL, log.l, theta.param, pi.param].
}
\description{
This function performs basic steps of EM algorithm.
}
\examples{
## Get an example file
exampleFile <- system.file("extdata/data", "rawCounts_5e+06bp_dynamic.RData", package = "SaaRclust")
## Load BAM count table
counts.l <- get(load(exampleFile))
## Get hard clustering results
hardClust.ord <- hardClust(counts.l, num.clusters=100, nstart = 100)
## Estimate theta parameter
theta.param <- estimateTheta(counts.l, hard.clust=hardClust.ord, alpha=0.1)
## Estimate pi parameter
readsPerCluts <- table(hardClust.ord)
pi.param <- readsPerCluts / sum(readsPerCluts)
## Run EM clustering
EM.obj <- EMclust(counts.l, theta.param=theta.param, pi.param=pi.param, num.iter=10, alpha=0.1, logL.th=1, log.scale=TRUE)
}
\author{
David Porubsky, Maryam Ghareghani
}
